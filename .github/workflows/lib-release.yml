name: Library Test/Release

on:
  push:
    tags:
      - "v*"

jobs:
  qa-tag:
    name: Run QA
    strategy:
      matrix:
        # https://endoflife.date/nodejs
        node-version:
          - 18
          - 20
          - 21
          - 22
        os-release:
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os-release }}
    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Select NodeJS version
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install

      - name: Lint
        run: yarn lint
      - name: Build
        run: yarn build
      - name: Test
        run: yarn test

  qa-docs:
    name: QA Documentation
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Select NodeJS version
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        env:
          # renovate: datasource=docker depName=node versioning=node
          NODE_VERSION: "20.13.1"
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install

      - name: Build Documentation
        run: yarn docs:typedoc

  qa-successful-tag:
    runs-on: ubuntu-22.04
    needs:
      - qa-tag
      - qa-docs
    if: ( success() || failure() )
    steps:
      - name: Success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

  lib-release:
    needs: qa-successful-tag
    name: Deploy library
    runs-on: ubuntu-22.04
    concurrency: lib-publish
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - name: Select NodeJS version
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        env:
          # renovate: datasource=docker depName=node versioning=node
          NODE_VERSION: "20.13.1"
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org

      - name: Enable Corepack
        run: corepack enable

      # Yarn dependencies cannot be cached until yarn is installed
      # WORKAROUND: https://github.com/actions/setup-node/issues/531
      - name: Extract cached dependencies
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Release new library version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          mv lib dist
          rm dist/tsconfig.tsbuildinfo
          node .scripts/create-release.js
          mv node_modules/ dist/node_modules
          mv yarn.lock dist/yarn.lock
          cd dist
          npm publish --access=public --provenance --tag=latest
